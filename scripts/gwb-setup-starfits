#!/usr/bin/env python
import os
import logging

import numpy as np
import argparse
from multiprocessing import Pool

from astropy.io import fits

from tgastars.write import write_ini, write_binary_ini
from tgastars.data import TGAS

from gwb.starmodels.cfg import STARMODELDIR

def get_N_random(N, seed=None):
    """Returns N random indices from TGAS
    """
    inds = np.arange(len(TGAS))
    np.random.seed(seed)
    np.random.shuffle(inds)
    return inds[:N]

class Worker(object):
    def __init__(self, overwrite=False, raise_exceptions=False, rootdir=STARMODELDIR):
        self.overwrite = overwrite
        self.raise_exceptions = raise_exceptions
        self.rootdir = rootdir

    def work(self, i):
        return write_ini(i, overwrite=self.overwrite, raise_exceptions=self.raise_exceptions,
                            rootdir=self.rootdir)

    def __call__(self, i):
        return self.work(i)

def main(pool, N_singles=None, seed=1234, 
        overwrite=False, raise_exceptions=False, rootdir=STARMODELDIR,
        pair_file='../data/snr8_dv10_llr7.5.fits'):



    tbl = fits.getdata(pair_file)
    inds_binary = ['{}-{}'.format(s1, s2) for s1, s2 in zip(tbl.star1, tbl.star2)]

    inds_single = np.concatenate([tbl.star1, tbl.star2])

    if N_singles is None:
        N_singles = len(tbl.star1)

    inds_single_control = get_N_random(N_singles, seed=seed)

    worker = Worker(overwrite=overwrite, raise_exceptions=raise_exceptions, 
                    rootdir=os.path.join(rootdir, 'singles'))

    if pool is not None:
        print('writing binary ini files...')
        pool.map(worker, inds_binary)
        print('writing single ini files..')
        pool.map(worker, inds_single)
        print('writing single (control) ini files..')
        pool.map(worker, inds_single_control)        
        pool.close()
    else:
        print('writing binary ini files...')
        map(worker, inds_binary)
        print('writing single ini files..')
        map(worker, inds_single)
        print('writing single (control) ini files..')
        map(worker, inds_single_control)        

if __name__=='__main__':

    parser = argparse.ArgumentParser(description='Write star.ini files for GWB project')

    parser.add_argument('-f', '--file', default=None, help='Name of file storing pairs')
    parser.add_argument('-o','--overwrite', action='store_true')
    parser.add_argument('-v','--verbose', action='store_true')
    parser.add_argument('-p','--processes', type=int, default=1)
    parser.add_argument('-n', type=int, default=None)
    parser.add_argument('-e', '--exceptions', action='store_true')
    parser.add_argument('--seed', type=int, default=1234)

    args = parser.parse_args()

    if args.file is not None:
        pairs = np.loadtxt(args.file) # e.g.

    if args.processes > 1:
        pool = Pool(processes=args.processes)
    else:
        pool = None

    main(pool, N_singles=args.n, seed=args.seed, overwrite=args.overwrite,
        raise_exceptions=args.exceptions)

